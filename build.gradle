import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'java'
}

version = project.mod_version
group = project.maven_group

// Dependency Mavem Repositories
repositories {
    maven {
        name "tterrag maven"
        url "https://maven.tterrag.com/"
    }
}

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Mod Dependencies
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "com.jozufozu.flywheel:Flywheel-Fabric:${project.flywheel_version}"
    shade "org.codehaus.janino:janino:${project.janino_version}"
}

// Autofill fabric.mod.json values
processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// Apply correct Java version
def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

// Shadow Configuration
shadowJar {
    archiveName = archivesBaseName + "_" + version + "_Fabric_${project.minecraft_version}.jar"
    configurations = [project.configurations.shade]

    exclude 'org/codehaus/commons/compiler/samples/**'
    exclude 'org/codehaus/janino/samples/**'
    exclude 'META-INF/maven/**'
}
remapJar {
    dependsOn shadowJar
}
task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "keystone.shadow"
}
artifacts {
    archives shadowJar
    shadow shadowJar
}
tasks.shadowJar.dependsOn tasks.relocateShadowJar
shadowJar.finalizedBy(tasks.remapJar)

jar {
    archiveName = archivesBaseName + "_" + version + "_API.jar"

    exclude 'keystone/core/**'

    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
javadoc {
    source = sourceSets.main.java
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
